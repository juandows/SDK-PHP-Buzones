<?php
/*
 * APIBuzonesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace APIBuzonesLib\Tests;

use APIBuzonesLib\APIException;
use APIBuzonesLib\Exceptions;
use APIBuzonesLib\APIHelper;
use APIBuzonesLib\Models;

class BoxesControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \APIBuzonesLib\Controllers\BoxesController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \APIBuzonesLib\APIBuzonesClient();
        self::$controller = $client->getBoxes();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Devuelve todos los buzones que tienen mensajes de la aplicaciÃ³n (iris2).
     */
    public function testLeerBuzones1()
    {
        // Parameters for the API call
        $token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MTc5Mzk5NDd9.-pLDemUYmYPpjG5CZ7VI7UUBcC8mC_KAbEyNpzHsTMw';

        // Set callback and perform API call
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            self::$controller->getApplicationsIris2BoxesGet($token);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
